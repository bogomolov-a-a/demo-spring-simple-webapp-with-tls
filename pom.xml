<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>demo-spring-simple-webapp-with-tls</artifactId>
  <build>
    <plugins>
      <!--main spring maven plugin-->
      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <groupId>org.springframework.boot</groupId>
      </plugin>
      <!-- tests -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <environmentVariables>
                <spring_profiles_active>test</spring_profiles_active>
              </environmentVariables>
              <includes>
                <include>**/*Test.java</include>
              </includes>
            </configuration>
            <goals>
              <goal>test</goal>
            </goals>
            <id>default-test</id>
            <phase>test</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven.surefire.plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <includes>
                <include>**/*IT.java</include>
              </includes>
            </configuration>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <id>default-integration-test</id>
            <phase>integration-test</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven.surefire.plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <artifactId>hibernate-jpamodelgen</artifactId>
              <groupId>org.hibernate</groupId>
              <version>${hibernate.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-sourcepath</arg>
            <arg>${project.basedir}/src/main/java${path.separator}${project.basedir}/target/generated-sources/annotations${path.separator}/</arg>
          </compilerArgs>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <!--plugin>
           <artifactId>sass-maven-plugin</artifactId>
           <executions>
             <execution>
               <configuration>
                 <destination>${project.build.outputDirectory}/css</destination>
                 <resources>
                   <resource>
                     <destination>${project.build.outputDirectory}/css</destination>
                     <relativeOutputDirectory>..</relativeOutputDirectory>
                     <source>
                       <directory>${project.build.sourceDirectory}/../resources/sass</directory>
                       <includes>
                         <includes>index.scss</includes>
                       </includes>
                     </source>
                   </resource>
                 </resources>
                 <sassSourceDirectory>${project.build.sourceDirectory}/../resources/sass</sassSourceDirectory>
               </configuration>
               <goals>
                 <goal>update-stylesheets</goal>
               </goals>
               <id>css-build</id>
               <phase>process-resources</phase>
             </execution>
           </executions>
           <groupId>nl.geodienstencentrum.maven</groupId>
           <version>3.7.2</version>
         </plugin-->
    </plugins>
  </build>
  <dependencies>
    <!--basic dependencies-->
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <optional>true</optional>
      <!-- for intellij idea lombok plugin -->
      <version>1.18.16</version>
    </dependency>
    <!--end basic dependencies-->
    <!--spring core-->
    <dependency>
      <artifactId>spring-boot-devtools</artifactId>
      <groupId>org.springframework.boot</groupId>
      <optional>true</optional>
    </dependency>
    <!--end spring core-->
    <!--spring data jpa-->
    <dependency>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <!--jpa validation-->
    <dependency>
      <artifactId>spring-boot-starter-validation</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <!--static metamodel-->
    <dependency>
      <artifactId>hibernate-jpamodelgen</artifactId>
      <groupId>org.hibernate</groupId>
    </dependency>
    <dependency>
      <artifactId>sqlite-jdbc</artifactId>
      <groupId>org.xerial</groupId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <artifactId>hibernate-core</artifactId>
      <groupId>org.hibernate</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>junit-vintage-engine</artifactId>
          <groupId>org.junit.vintage</groupId>
        </exclusion>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
    </dependency>
    <!--end spring data jpa-->
    <!--db migration tools-->
    <dependency>
      <artifactId>liquibase-core</artifactId>
      <groupId>org.liquibase</groupId>
    </dependency>
    <!--end db migration tools-->
    <!--spring web-->
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-session-core</artifactId>
      <groupId>org.springframework.session</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>javax.servlet-api</artifactId>
      <groupId>javax.servlet</groupId>
    </dependency>
    <!--end spring web-->
    <!--spring security-->
    <dependency>
      <artifactId>spring-boot-starter-security</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-security-config</artifactId>
      <groupId>org.springframework.security</groupId>
    </dependency>
    <!--end spring security-->
    <!--frontend-->
    <dependency>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>thymeleaf-extras-springsecurity5</artifactId>
      <groupId>org.thymeleaf.extras</groupId>
    </dependency>
    <dependency>
      <artifactId>bootstrap</artifactId>
      <groupId>org.webjars</groupId>
      <version>${bootstrap.version}</version>
    </dependency>
    <!--end frontend-->
    <!--tests-->
    <dependency>
      <artifactId>junit-jupiter-engine</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>spring-security-test</artifactId>
      <groupId>org.springframework.security</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>httpclient</artifactId>
      <groupId>org.apache.httpcomponents</groupId>
      <scope>test</scope>
    </dependency>
    <!--end tests-->
  </dependencies>
  <groupId>org.artembogomolova</groupId>
  <modelVersion>4.0.0</modelVersion>
  <name>demo-webapp-with-tls</name>
  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <relativePath/>
    <version>2.3.4.RELEASE</version> <!-- lookup parent from repository -->
  </parent>

  <profiles>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-pmd-plugin</artifactId>
            <dependencies>
              <dependency>
                <artifactId>pmd-core</artifactId>
                <groupId>net.sourceforge.pmd</groupId>
                <version>${pmd.plugin.dependency.version}</version>
              </dependency>
              <dependency>
                <artifactId>pmd-java</artifactId>
                <groupId>net.sourceforge.pmd</groupId>
                <version>${pmd.plugin.dependency.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <configuration>
                  <includeTests>true</includeTests>
                  <linkXRef>true</linkXRef>
                  <skipPmdError>false</skipPmdError>
                  <targetJdk>${java.version}</targetJdk>
                </configuration>
                <goals>
                  <goal>pmd</goal>
                </goals>
                <id>pmd</id>
                <phase>compile</phase>
              </execution>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <id>pmd-check</id>
                <phase>compile</phase>
              </execution>
              <execution>
                <configuration>
                  <includeTests>true</includeTests>
                </configuration>
                <goals>
                  <goal>cpd</goal>
                </goals>
                <id>cpd</id>
                <phase>compile</phase>
              </execution>
              <execution>
                <goals>
                  <goal>cpd-check</goal>
                </goals>
                <id>cpd-check</id>
                <phase>compile</phase>
              </execution>
            </executions>
            <groupId>org.apache.maven.plugins</groupId>
            <version>${pmd.plugin.version}</version>
          </plugin>
          <plugin>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <dependencies>
              <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
              <dependency>
                <artifactId>spotbugs</artifactId>
                <groupId>com.github.spotbugs</groupId>
                <version>${spotbugs.plugin.dependency.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <configuration>
                  <includeTests>true</includeTests>
                </configuration>
                <goals>
                  <goal>spotbugs</goal>
                </goals>
                <id>spotbugs</id>
                <phase>compile</phase>
              </execution>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <id>spotbugs-check</id>
                <phase>compile</phase>
              </execution>
            </executions>
            <groupId>com.github.spotbugs</groupId>
            <version>${spotbugs.plugin.version}</version>
          </plugin>
          <plugin>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <dependencies>
              <dependency>
                <artifactId>checkstyle</artifactId>
                <groupId>com.puppycrawl.tools</groupId>
                <version>${maven.checkstyle.plugin.dependency.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <configuration>
                  <configLocation>google_checks.xml</configLocation>
                  <failsOnError>true</failsOnError>
                  <includeTestSourceDirectory>true</includeTestSourceDirectory>
                  <sourceDirectories>
                    <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                  </sourceDirectories>
                  <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                  <suppressionsLocation>${maven.multiModuleProjectDirectory}/checkstyle-suppressions.xml</suppressionsLocation>
                </configuration>
                <goals>
                  <goal>check</goal>
                </goals>
                <id>checkstyle-check</id>
                <phase>compile</phase>
              </execution>
              <execution>
                <configuration>
                  <configLocation>${maven.multiModuleProjectDirectory}/checkstyle.xml</configLocation>
                  <failsOnError>true</failsOnError>
                  <includeTestSourceDirectory>true</includeTestSourceDirectory>
                  <sourceDirectories>
                    <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                  </sourceDirectories>
                </configuration>
                <goals>
                  <goal>check</goal>
                </goals>
                <id>checkstyle-custom</id>
                <phase>compile</phase>
              </execution>
            </executions>
            <groupId>org.apache.maven.plugins</groupId>
            <version>${maven.checkstyle.plugin.version}</version>
          </plugin>
        </plugins>
      </build>
      <id>code-quality</id>
    </profile>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <id>default-prepare-agent</id>
              </execution>
              <execution>
                <goals>
                  <goal>report</goal>
                </goals>
                <id>default-report-agent</id>
                <phase>test</phase>
              </execution>
              <execution>
                <configuration>
                  <rules>
                    <rule>
                      <element>${jacoco.plugin.coverage.element.name}</element>
                      <limits>
                        <limit>
                          <counter>LINE</counter>
                          <minimum>${jacoco.plugin.coverage.min.ratio}</minimum>
                          <value>COVEREDRATIO</value>
                        </limit>
                        <limit>
                          <counter>BRANCH</counter>
                          <minimum>${jacoco.plugin.coverage.min.ratio}</minimum>
                          <value>COVEREDRATIO</value>
                        </limit>
                        <limit>
                          <counter>CLASS</counter>
                          <minimum>${jacoco.plugin.coverage.min.ratio}</minimum>
                          <value>COVEREDRATIO</value>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
                <goals>
                  <goal>check</goal>
                </goals>
                <id>jacoco-check</id>
                <phase>test</phase>
              </execution>
            </executions>
            <groupId>org.jacoco</groupId>
            <version>${jacoco.plugin.version}</version>
          </plugin>
        </plugins>
      </build>
      <id>code-coverage-test</id>
    </profile>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
                <id>default-prepare-agent-integration</id>
              </execution>
              <execution>
                <goals>
                  <goal>report-integration</goal>
                </goals>
                <id>default-report-agent-integration</id>
                <phase>test</phase>
              </execution>
              <execution>
                <configuration>
                  <haltOnFailure>true</haltOnFailure>
                  <rules>
                    <rule>
                      <element>${jacoco.plugin.coverage.element.name}</element>
                      <limits>
                        <limit>
                          <counter>LINE</counter>
                          <minimum>${jacoco.plugin.coverage.min.ratio}</minimum>
                          <value>COVEREDRATIO</value>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
                <goals>
                  <goal>check</goal>
                </goals>
                <id>jacoco-check-integration</id>
                <phase>integration-test</phase>
              </execution>
            </executions>
            <groupId>org.jacoco</groupId>
            <version>${jacoco.plugin.version}</version>
          </plugin>
        </plugins>
      </build>
      <id>code-coverage-integration-test</id>
    </profile>
    <profile>
      <build>
        <plugins>
          <plugin>
            <artifactId>sonar-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>sonar</goal>
                </goals>
                <id>sonar-check</id>
                <phase>verify</phase>
              </execution>
            </executions>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <version>${sonar.maven.plugin.version}</version>
          </plugin>
        </plugins>
      </build>
      <id>sonar-check</id>
    </profile>
  </profiles>

  <properties>
    <bootstrap.version>4.5.3</bootstrap.version>
    <!-- code quality. static analysis-->
    <jacoco.plugin.coverage.element.name>BUNDLE</jacoco.plugin.coverage.element.name>
    <jacoco.plugin.coverage.min.ratio>0.900</jacoco.plugin.coverage.min.ratio>
    <jacoco.plugin.version>0.8.5</jacoco.plugin.version>
    <java.version>11</java.version>
    <maven.checkstyle.plugin.dependency.version>8.35</maven.checkstyle.plugin.dependency.version>
    <maven.checkstyle.plugin.version>3.1.1</maven.checkstyle.plugin.version>
    <maven.failsafe.plugin.version>3.0.0-M5</maven.failsafe.plugin.version>
    <maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
    <!--code quality. tests -->
    <pmd.plugin.dependency.version>6.26.0</pmd.plugin.dependency.version>
    <pmd.plugin.version>3.13.0</pmd.plugin.version>
    <!--BUNDLE is default element for coverage.
     Definition of BUNDLE
      BUNDLE is a set of classes/packages under analysis. Only with the Ant report task it is possible to split the classes under test into multiple bundles
       (with the "group" tag). With Maven currently all classes of a module form a bundle (once we get multi-module reports
       I would prefer to have a bundle per module).-->
    <sonar.maven.plugin.version>3.7.0.1746</sonar.maven.plugin.version>
    <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>
    <sonar.projectKey>${sonar.organization}_${project.artifactId}</sonar.projectKey>
    <spotbugs.plugin.dependency.version>4.1.2</spotbugs.plugin.dependency.version>
    <!-- -->
    <spotbugs.plugin.version>4.0.4</spotbugs.plugin.version>
  </properties>
  <version>0.1.5</version>
</project>
